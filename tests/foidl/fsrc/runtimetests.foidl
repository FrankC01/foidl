; ------------------------------------------------------------------------------
; runtimetests
; Tests basic calls to foidl runtime
;
; Copyright 2018 John Bucci
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
; ------------------------------------------------------------------------------

; Simple Runtime Tests

module runtimetests

; Function: exception
; Description: Writes exception with except_str and exits

func exception [except_str]
    failWith:
        format:
            "Exception: {}. exiting...`n"
            [except_str]

var :private test_content [
    {
        :description "empty function test"
        :rtl_func   empty_test
        :arg_count  1
        :test_data  [
                        [{} [] <> #{} 1 2 3 "String" 'c' ""]
                        [true true true true false false false false false true]
                    ]
    }
]

; Test 'empty?' and comapre with expected result

func :private empty_test [arg expected]
    =: empty?: arg expected

; Accumulate to result list, outcome of test on argument with expected result

func :private test_driver [ref_fn tdat tres accum indx]
    extend:
        accum
        (ref_fn
            get: tdat indx
            get: tres indx)

; Called from 'fold' in main, refolds on data list with test function

func :private run_test [accum indx]
    printnl!: "Entering run_test as part of fold function"
    let test_map [] get: test_content indx
    let ref_fn []   get: test_map :rtl_func
    let data []     get: test_map :test_data
    let tdata []    get: data zero

    fold:
        (test_driver ref_fn tdata get: data one)
        accum
        series: zero count: tdata one


func main [argv]
    printnl!: "Welcome to runtime tests"
    printnl!: fold: run_test []  series: zero count: test_content one


    printnl!: ""

