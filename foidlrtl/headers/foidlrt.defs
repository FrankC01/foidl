;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; foidlrt
; Core runtime
;
; Copyright (c) Frank V. Castellucci
; All Rights Reserved
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

module foidlrt

; Global Types

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;	Scalar constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

var true  			Type
var false 			Type
var nil   			Type

var zero  			Type
var one 			Type
var two 			Type
var three 			Type
var four 			Type
var five 			Type
var six 			Type
var seven 			Type
var eight 			Type
var nine 			Type
var ten  			Type
var eleven 			Type
var twelve 			Type
var thirteen 		Type
var fourteen 		Type
var fifteen 		Type
var sixteen 		Type

var infinite 		Type 	;	Series

var space_string 	Type
var empty_string 	Type

var empty_list 		Type
var empty_set		Type
var empty_map 		Type
var empty_vector 	Type

var chr0 	 Type
var chr1 	 Type
var chr2 	 Type
var chr3 	 Type
var chr4 	 Type
var chr5 	 Type
var chr6 	 Type
var chr7 	 Type
var chr8 	 Type
var chr9 	 Type

var digits 	 Type

var tbchr 	 Type
var nlchr 	 Type
var crchr 	 Type
var spchr 	 Type
var exchr 	 Type 	;  !
var semichr  Type 	;	;
var colonchr Type 	;	:
var qmchr 	 Type 	;  ?
var eqchr 	 Type 	;  =
var tmchr 	 Type 	;	*
var addchr 	 Type 	; 	+
var subchr 	 Type 	;	-
var divchr 	 Type 	; 	/
var orchr 	 Type 	;  |
var sqchr	 Type 	;	'
var dqchr 	 Type 	;	""
var eschr 	 Type 	;	\
var carchr 	 Type 	;	^
var atchr 	 Type   ; 	@
var pctchr 	 Type 	; 	%
var tildchr  Type   ; 	~
var lbracket Type 	;	[
var rbracket Type 	;	]
var lparen 	 Type  	; 	(
var rparen 	 Type 	; 	)
var langle 	 Type 	;	<
var rangle 	 Type 	;	>
var comma	 Type 	;	,
var lbrace 	 Type 	;	{
var rbrace 	 Type 	;	}
var meta	 Type 	;	#
var prchr 	 Type 	; 	.

var whitespace		Type
;var boundarySet 	Type
;var boundarySetLite Type

var cin 	Type
var cout 	Type
var cerr 	Type

var byte_type 		Type
var int_type 		Type
var char_type 		Type
var bool_type 		Type
var func_type 		Type
var str_type 		Type
var kwd_type 		Type

var real_type 		Type 	;	Not yet

var file_type		Type
var url_type		Type
var ip_type			Type
var mem_type 		Type

var list_type 		Type
var vector_type 	Type
var set_type 		Type
var map_type 		Type
var mapentry_type	Type
var linknode_type 	Type

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Runtime Functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

var   foidl_env 	Type
func  foidl_retain 		[obj]
func  foidl_release 	[obj]
func  foidl_heap_setup 	[]
func  foidl_fail 		[]
;func  foidl_failWith 	[msg] - REMOVE FROM ASM
;func  foidl_system_getenv [x]

func  foidl_fref_instance [fn]
func  foidl_imbue [fni val]
func  foidl_dispatch0 [fn]


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Concurrency functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

var   wrk_init      Type
var   wrk_create    Type
var   wrk_run       Type
var   wrk_complete  Type
var   not_work      Type

func foidl_nap!         [timeout_ms]
func foidl_thread!      [fnref argvector]
func foidl_task!        [fnref argvector]
func foidl_start!       [wrkref]
func foidl_wait!        [wrkref]
func foidl_work_state   [wrkref]

func foidl_create_thread_pool!  [pause_timer]
func foidl_queue_work!          [poolref wrkref]
func foidl_queue_thread!        [poolref fnref argvector]
func foidl_pause_thread_pool!   [poolref blockwork]
func foidl_resume_thread_pool!  [poolref]
func foidl_exit_thread_pool!    [poolref]
func foidl_kill_thread_pool!    [poolref]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Basic Math Functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

func  foidl_add [x, y]
func  foidl_sub [x, y]
func  foidl_div [x, y]
func  foidl_mul [x, y]
func  foidl_mod [x, y]
func  foidl_inc [x]
func  foidl_dec [x]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Number functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

func  foidl_num_abs[x]
func  foidl_num_neg[x]
func  foidl_num_factorial[x]
func  foidl_num_floor[x]
func  foidl_num_ceil[x]
func  foidl_num_round[d x]
func  foidl_num_sqrt[d x]
func  foidl_num_sin[d x]
func  foidl_num_cos[d x]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Predicate Functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

func  foidl_truthy? 	  [arg]
func  foidl_falsey? 	  [arg]
func  foidl_collection?   [arg]
func  foidl_extendable?   [arg]
func  foidl_empty? 		  [arg]
func  foidl_valid_symbol  [arg]
func  foidl_valid_keyword [arg]
func  foidl_valid_number  [arg]
func  foidl_categorize_num [arg]
func  foidl_categorize 	  [arg]
func  foidl_even?         [arg]
func  foidl_odd?          [arg]
func  foidl_positive?     [arg]
func  foidl_negative?     [arg]

func  foidl_equal? 		[x, y]
func  foidl_not_equal?	[x, y]
func  foidl_lt?  		[x, y]
func  foidl_gt?  		[x, y]
func  foidl_lteq? 		[x, y]
func  foidl_gteq? 		[x, y]
func  foidl_and 		[x, y]
func  foidl_or 			[x, y]
func  foidl_not 		[x]

func  foidl_byte? 		[x]
func  foidl_char? 		[x]
func  foidl_number? 	[x]
func  foidl_integer?    [x]
func  foidl_string? 	[x]
func  foidl_keyword? 	[x]

func  foidl_list? 		[x]
func  foidl_map? 		[x]
func  foidl_mapEntry? 	[x]
func  foidl_set? 		[x]
func  foidl_vector? 	[x]
func  foidl_series? 	[x]

func  foidl_function? 	[x]
func  foidl_scalar? 	[x]
func  foidl_io? 		[x]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Type and Coerce Function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

func 	foidl_type 			[arg]
func 	foidl_isType? 		[arg with]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Fundemental String Functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

func 	foidl_trim 	      [str]
func    foidl_format      [str coll]
func    foidl_descan_string [str]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Fundemental Regex Functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

func    foidl_regex [s]
func    foidl_regex_match? [s pattern]
func    foidl_tokenize [s patterns ignores]


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Fundemental Collection Functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

func  	foidl_count  [coll]
func  	foidl_first  [coll]
func  	foidl_second [coll]
func  	foidl_rest   [coll]
func 	foidl_last 	 [coll]
func  	foidl_getd 	 [coll, arg, def]
func    foidl_indexof [coll arg]

func 	foidl_reverse 	[coll]
func 	foidl_flatten 	[coll]
func  	foidl_apply	 	[fn coll]
func  	foidl_map 		[fn coll]
func  	foidl_reduce 	[fn args]
func 	foidl_fold 		[fn accum args]
func 	foidl_reduced 	[arg]

func  	foidl_extend  	[coll args]
func  	foidl_extendKV  [coll k v]
func 	foidl_update  	[coll k arg]
func 	foidl_remove  	[pred coll]
func 	foidl_pop 		[coll]
func 	foidl_push 		[coll arg]
func 	foidl_drop	  	[arg coll]
func 	foidl_drop_last [coll]
func 	foidl_take	  	[arg coll]
func 	foidl_split   	[coll delim]
func 	foidl_series 	[start stop step]

func 	foidl_key 		[me]
func 	foidl_value 	[me]
func    foidl_zip       [coll1 coll2]
func    foidl_zipmap    [coll1 coll2]


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; New IO
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

var chan_file   Type
var file_eof    Type

var open_r      Type
var open_rb     Type
var open_w      Type
var open_wb     Type
var open_rw     Type
var open_rwb    Type
var open_a      Type
var open_ab     Type
var open_ar     Type
var open_arb    Type

var render_byte Type
var render_char Type
var render_line Type
var render_file Type

var chan_target Type
var chan_type   Type
var chan_render Type
var chan_mode   Type

func    foidl_open_file!        [name mode args]
func    foidl_channel_read!     [channel]
func    foidl_channel_write!    [channel data]
func    foidl_channel_close!    [channel]
func    foidl_channel_quaf!     [channel]

func    foidl_fexists? [fname]
